import pandas as pd
import numpy as np
import urllib.request
import streamlit as st
import matplotlib.pyplot as plt
import seaborn as sns
import pydeck as pdk
import sys
sys.path.append('../')
from retraite import get_df

df_concat, df_region = get_df()
st.set_page_config(page_title="R√©partition des retrait√©s en emploi", page_icon="üìä")

st.sidebar.header("R√©partition des retrait√©s en emploi")

st.header("R√©partition des retrait√©s et pr√©retrait√©s exer√ßant un emploi")

#5
st.markdown("<h4>R√©partition des retrait√©s et pr√©retrait√©s exer√ßant un emploi selon leur tranche d‚Äô√¢ge</h4>", unsafe_allow_html=True)

age_dist = df_concat[df_concat['Designation'].isin(['Moins de 60 ans', '60 √† 64 ans', '65 √† 69 ans', '70 √† 74 ans', '75 ans et plus'])]
age_dist = age_dist.set_index('Designation').T
age_dist = age_dist.loc['France enti√®re']
fig, ax = plt.subplots()
ax.pie(age_dist, labels=age_dist.index, autopct='%1.1f%%')
ax.axis('equal')  # Pour un graphique √† secteurs circulaire.
#plt.title('R√©partition des retrait√©s et pr√©retrait√©s exer√ßant un emploi selon leur tranche d‚Äô√¢ge')
st.pyplot(fig)

#10
st.markdown("<h4>R√©partition des retrait√©s et pr√©retrait√©s exer√ßant un emploi par r√©gion (en %)</h4>", unsafe_allow_html=True)

index = df_region[df_region['Designation'] == "R√©partition des retrait√©s et pr√©retrait√©s exer√ßant un emploi selon leur cat√©gorie socioprofessionnelle en¬†%"].index[0]
df_retraite = df_region.iloc[index:-1]
df_retraite_clean = df_retraite.dropna(how='all')
# Cr√©ez un nouveau DataFrame pour stocker les donn√©es n√©cessaires
heatmap_data = pd.DataFrame()

# Stockez la cat√©gorie actuelle (sera mise √† jour √† chaque nouvelle cat√©gorie rencontr√©e)
current_category = ""

# Parcourez chaque ligne du DataFrame nettoy√©
for i, row in df_retraite_clean.iterrows():
    # Si la ligne est une cat√©gorie (ne contient pas "Proportion"), mettez √† jour la cat√©gorie actuelle
    if "Proportion" not in row['Designation']:
        current_category = row['Designation']
    # Sinon, si la ligne contient les proportions pour les retrait√©s en cumul emploi-retraite, ajoutez ces donn√©es au nouveau DataFrame
    elif "Proportion parmi les retrait√©s en cumul emploi-retraite" in row['Designation']:
        heatmap_data[current_category] = row[1:]
        
# Transposez le DataFrame pour que les cat√©gories deviennent des colonnes et les r√©gions deviennent des lignes
heatmap_data = heatmap_data.T


# Convertir toutes les donn√©es en float
heatmap_data = heatmap_data.apply(pd.to_numeric, errors='coerce')

# Cr√©er une figure
fig, ax = plt.subplots(figsize=(10, 8))

# Cr√©ez la heatmap
sns.heatmap(heatmap_data, cmap='YlGnBu', annot=True)


# Afficher la figure avec streamlit
st.pyplot(fig)